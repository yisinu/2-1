import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class Student {
	private String name; 	//요롷게 해줘야 캡슐화가 되는 거다
	private String id;	//그럼 캡슐화가 된 놈을 외부에서 어떻게 갖다 쓰느냐!?
	private int mileage;	//접근자와 생성자!
	private static int studentCount = 0;

	public Student(String name, String id) {
		this.name = name;
		this.id = id;
		this.mileage = 0;
		studentCount++;
	}
	/*슷땟띡! 클래스 내에서 모두가 공유하는 변수!
	 * 즉, Student 클래스로 만들어진 모든 객체가 공유함
	 * (클래스이름).(스태틱변수) = (헤으응);
	 * 객체를 안 만들어도 무조건 하나가 만들어진다
	 * 그래서 객체 없어도 쓸 수 있음
	 */

	
	public void addMileage(int value) {
		this.mileage += value;
	}
	
	public boolean isPass() {
		if (mileage >= 500) {
			System.out.println(name + "("+ id + "): " + mileage + "->PASS");
			return true;
		} else {
			System.out.println(name + "("+ id + "): " + mileage + "->FAIL");
			return false;
		}
	}
	
	public static int getStudentCount() {
		return studentCount ;
	}
}
	

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());

        for (int i = 0; i < N; i++)
        {
            String name = br.readLine();
            String id = br.readLine();

            int M = Integer.parseInt(br.readLine());

            Student jammini = new Student(name, id);
            
            for (int j = 0; j < M; j++)
            {
                int mileage = Integer.parseInt(br.readLine());
                jammini.addMileage(mileage);
            }
            jammini.isPass();
        }
        System.out.println(Student.getStudentCount());
    }
}
